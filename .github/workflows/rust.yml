name: Base

on: pull_request

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: clippy

    - name: Cache
      uses: actions/cache@v2
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --all --verbose

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets -- -D warnings

    - name: Tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --all --doc --verbose

    - name: Doc
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --no-deps


  build_example:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache
      uses: actions/cache@v2
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: clippy

    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --manifest-path=example-program/Cargo.toml --verbose

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --manifest-path=example-program/Cargo.toml -- -D warnings

    - name: Tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --manifest-path=example-program/Cargo.toml --doc --verbose

    - name: Doc
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --no-deps

  linting_ts_example:
    name: Linting TS example
    runs-on: ubuntu-latest # o
    steps: # 
      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Code Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        working-directory: ./example-program/ts-examples 
        run: npm ci

      - name: Code Linting
        working-directory: ./example-program/ts-examples
        run: npm run lint
